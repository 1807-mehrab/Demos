/* This is DDL (create table) */
CREATE TABLE "CAR" (
    C_ID NUMBER PRIMARY KEY,
    C_MAKE VARCHAR2(50),
    C_MODEL VARCHAR2(25),
    C_YEAR INTEGER
);

/* DDL - Alter table */
ALTER TABLE CAR MODIFY C_ID INTEGER;

/* DML - Insert */
INSERT INTO CAR VALUES(1, 'Toyota', 'Camry', 1997);
INSERT INTO CAR VALUES(2, 'Toyota', 'RAV-4', 2019);
INSERT INTO CAR VALUES(3, 'Honda', 'CR-V', 2019);
INSERT INTO CAR (c_id, c_make) VALUES (2, 'Honda');
INSERT INTO CAR (c_id) VALUES (1); /* Doesn't work */

/* DQL - SELECT */
SELECT * FROM CAR;
SELECT C_MAKE, C_MODEL FROM CAR;

/* Alias - AS */
SELECT C_MAKE AS Make FROM CAR;
SELECT C_MODEL AS MODEL FROM CAR;

/* CAN USE +, -, *, / ON NUMERICS, JOIN CHARACTERS WITH + */
SELECT C_YEAR * C_YEAR AS YEARSQUARED FROM CAR;

/* GROUP BY: REDUCES ROWS TO DISTINCT VALUES */
SELECT C_MAKE FROM CAR GROUP BY C_MAKE;

/* AGGREGATE FUNCTION (AVG, MIN, MAX, COUNT, SUM) PERFORMS OPERATION ON AN ENTIRE COLUMN */
SELECT MIN(C_YEAR), C_MAKE FROM CAR GROUP BY C_MAKE;

/* DML - WHERE CLAUSE */
SELECT * FROM CAR WHERE C_MAKE = 'Honda';
SELECT * FROM CAR WHERE C_YEAR < 2000;
SELECT * FROM CAR WHERE C_MODEL = 'CR-V' OR C_MAKE = 'Honda';
UPDATE CAR SET C_YEAR = 2005 WHERE C_MODEL = 'CR-V';

/* SCALAR FUNCTION: OPERATES ON INDIVIDUAL ENTRIES */
SELECT LOWER(C_MODEL) FROM CAR WHERE C_MODEL = 'CR-V';

/* GROUP BY VS ORDER BY */
SELECT * FROM CAR ORDER BY C_YEAR DESC;
SELECT C_MAKE, C_YEAR FROM CAR GROUP BY C_MAKE, C_YEAR ORDER BY C_YEAR;

/* WHERE VS HAVING - HAVING IS FOR AGGREGATE FUNCTIONS USED WITH GROUP BY */
SELECT * FROM CAR WHERE C_YEAR > 2000;
SELECT C_MAKE, AVG(C_YEAR) FROM CAR GROUP BY C_MAKE HAVING AVG(C_YEAR) > 2000;